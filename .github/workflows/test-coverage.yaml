# .github/workflows/test-coverage.yaml

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      BWS_ACCESS_TOKEN: ${{ secrets.BWS_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      # ‚úÖ Debug: Check if token is present (shell level)
      - name: Check if BWS_ACCESS_TOKEN is set
        run: |
          if [ -z "$BWS_ACCESS_TOKEN" ]; then
            echo "‚ùå BWS_ACCESS_TOKEN is NOT set"
            exit 1
          else
            echo "‚úÖ BWS_ACCESS_TOKEN is set"
          fi
        shell: bash

      # ‚úÖ Debug: Check if token is visible in R
      - name: Check BWS_ACCESS_TOKEN in R
        run: |
          cat("BWS_ACCESS_TOKEN in R: ", Sys.getenv("BWS_ACCESS_TOKEN") != "", "\n")
        shell: Rscript {0}

      # üîç Run the test coverage analysis
      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
        shell: Rscript {0}

      # üß™ Output testthat results even if failure occurs
